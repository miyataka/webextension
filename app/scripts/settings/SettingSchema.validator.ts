// @ts-nocheck
// eslint-disable
// This file is generated by create-validator-ts
import Ajv from "ajv";
import * as apiTypes from "./SettingSchema";

export const SCHEMA = {
    $schema: "http://json-schema.org/draft-07/schema#",
    $ref: "#/definitions/SettingSchema",
    definitions: {
        SettingSchema: {
            type: "object",
            properties: {
                enableConsoleIntegration: {
                    type: "boolean",
                    title: "Enable Console Integration",
                    default: true
                },
                sliceBefore: {
                    type: "number",
                    title: "Slice Content before",
                    default: 32
                },
                sliceAfter: {
                    type: "number",
                    title: "Slice Content after",
                    default: 32
                }
            },
            required: ["enableConsoleIntegration", "sliceBefore", "sliceAfter"],
            additionalProperties: false,
            title: "Setting"
        }
    }
};
const ajv = new Ajv({ removeAdditional: true }).addSchema(SCHEMA, "SCHEMA");
export function validateSettingSchema(payload: unknown): apiTypes.SettingSchema {
    if (!isSettingSchema(payload)) {
        const error = new Error("invalid payload: SettingSchema");
        error.name = "ValidationError";
        throw error;
    }
    return payload;
}

export function isSettingSchema(payload: unknown): payload is apiTypes.SettingSchema {
    /** Schema is defined in {@link SCHEMA.definitions.SettingSchema } **/
    const ajvValidate = ajv.compile({ $ref: "SCHEMA#/definitions/SettingSchema" });
    return ajvValidate(payload);
}
